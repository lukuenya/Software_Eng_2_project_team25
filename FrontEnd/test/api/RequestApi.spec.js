/*
 * NineToFive API
 * This is NineToFive API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: ndummatt@ece.auth.gr
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.32
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NineToFiveApi);
  }
}(this, function(expect, NineToFiveApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NineToFiveApi.RequestApi();
  });

  describe('(package)', function() {
    describe('RequestApi', function() {
      describe('addRequest', function() {
        it('should call addRequest successfully', function(done) {
          // TODO: uncomment, update parameter values for addRequest call and complete the assertions
          /*
          var userid = 56;
          var body = new NineToFiveApi.Body5();
          body.seekerUsername = "";
          body.providerUsername = "";
          body.jobTitle = "";

          instance.addRequest(userid, body, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(NineToFiveApi.InlineResponse2005);
            expect(data.requestid).to.be.a('number');
            expect(data.requestid).to.be("0");
            expect(data.seekerid).to.be.a('number');
            expect(data.seekerid).to.be("0");
            expect(data.providerid).to.be.a('number');
            expect(data.providerid).to.be("0");
            expect(data.announcementid).to.be.a('number');
            expect(data.announcementid).to.be("0");
            expect(data.status).to.be.a('boolean');
            expect(data.status).to.be(false);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('delreq', function() {
        it('should call delreq successfully', function(done) {
          // TODO: uncomment, update parameter values for delreq call and complete the assertions
          /*
          var userid = 56;
          var requestid = 56;

          instance.delreq(userid, requestid, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(NineToFiveApi.InlineResponse2005);
            expect(data.requestid).to.be.a('number');
            expect(data.requestid).to.be("0");
            expect(data.seekerid).to.be.a('number');
            expect(data.seekerid).to.be("0");
            expect(data.providerid).to.be.a('number');
            expect(data.providerid).to.be("0");
            expect(data.announcementid).to.be.a('number');
            expect(data.announcementid).to.be("0");
            expect(data.status).to.be.a('boolean');
            expect(data.status).to.be(false);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getNotificationsList', function() {
        it('should call getNotificationsList successfully', function(done) {
          // TODO: uncomment, update parameter values for getNotificationsList call and complete the assertions
          /*
          var userid = 56;

          instance.getNotificationsList(userid, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            let dataCtr = data;
            expect(dataCtr).to.be.an(Array);
            expect(dataCtr).to.not.be.empty();
            for (let p in dataCtr) {
              let data = dataCtr[p];
              expect(data).to.be.a(NineToFiveApi.InlineResponse2004);
              expect(data.requestid).to.be.a('number');
              expect(data.requestid).to.be("0");
              expect(data.seekerid).to.be.a('number');
              expect(data.seekerid).to.be("0");
              expect(data.providerid).to.be.a('number');
              expect(data.providerid).to.be("0");
              expect(data.announcementid).to.be.a('number');
              expect(data.announcementid).to.be("0");
              expect(data.status).to.be.a('boolean');
              expect(data.status).to.be(false);
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('updateRequest', function() {
        it('should call updateRequest successfully', function(done) {
          // TODO: uncomment, update parameter values for updateRequest call and complete the assertions
          /*
          var userid = 56;
          var requestid = "requestid_example";

          instance.updateRequest(userid, requestid, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(NineToFiveApi.InlineResponse2006);
            expect(data.status).to.be.a('boolean');
            expect(data.status).to.be(false);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
