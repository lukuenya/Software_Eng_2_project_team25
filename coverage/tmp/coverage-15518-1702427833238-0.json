{"result":[{"scriptId":"6","url":"node:internal/per_context/primordials","functions":[{"functionName":"SafeIterator","ranges":[{"startOffset":9499,"endOffset":9570,"count":2}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":9575,"endOffset":9624,"count":5}],"isBlockCoverage":true},{"functionName":"desc.value","ranges":[{"startOffset":11239,"endOffset":11306,"count":2}],"isBlockCoverage":true},{"functionName":"SafeWeakMap","ranges":[{"startOffset":12136,"endOffset":12164,"count":1}],"isBlockCoverage":false},{"functionName":"SafeSet","ranges":[{"startOffset":12293,"endOffset":12321,"count":1}],"isBlockCoverage":false},{"functionName":"SafeFinalizationRegistry","ranges":[{"startOffset":12745,"endOffset":12801,"count":1}],"isBlockCoverage":true}]},{"scriptId":"11","url":"node:internal/bootstrap/node","functions":[{"functionName":"get","ranges":[{"startOffset":3830,"endOffset":3880,"count":2}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":4128,"endOffset":4547,"count":1},{"startOffset":4252,"endOffset":4266,"count":0},{"startOffset":4267,"endOffset":4315,"count":0},{"startOffset":4317,"endOffset":4352,"count":0},{"startOffset":4469,"endOffset":4518,"count":0}],"isBlockCoverage":true}]},{"scriptId":"13","url":"node:internal/async_hooks","functions":[{"functionName":"newAsyncId","ranges":[{"startOffset":14549,"endOffset":14619,"count":2}],"isBlockCoverage":true},{"functionName":"getDefaultTriggerAsyncId","ranges":[{"startOffset":14994,"endOffset":15284,"count":2},{"startOffset":15250,"endOffset":15283,"count":0}],"isBlockCoverage":true},{"functionName":"hasHooks","ranges":[{"startOffset":16096,"endOffset":16159,"count":10}],"isBlockCoverage":true},{"functionName":"enabledHooksExist","ranges":[{"startOffset":16161,"endOffset":16220,"count":2}],"isBlockCoverage":true},{"functionName":"initHooksExist","ranges":[{"startOffset":16222,"endOffset":16277,"count":2}],"isBlockCoverage":true},{"functionName":"destroyHooksExist","ranges":[{"startOffset":16338,"endOffset":16399,"count":2}],"isBlockCoverage":true},{"functionName":"emitBeforeScript","ranges":[{"startOffset":16890,"endOffset":17066,"count":2},{"startOffset":17038,"endOffset":17064,"count":0}],"isBlockCoverage":true},{"functionName":"emitAfterScript","ranges":[{"startOffset":17069,"endOffset":17189,"count":2},{"startOffset":17133,"endOffset":17158,"count":0}],"isBlockCoverage":true},{"functionName":"pushAsyncContext","ranges":[{"startOffset":17534,"endOffset":18104,"count":2},{"startOffset":17754,"endOffset":17804,"count":0}],"isBlockCoverage":true},{"functionName":"popAsyncContext","ranges":[{"startOffset":18169,"endOffset":18780,"count":2},{"startOffset":18285,"endOffset":18298,"count":0},{"startOffset":18377,"endOffset":18483,"count":0}],"isBlockCoverage":true}]},{"scriptId":"14","url":"node:internal/validators","functions":[{"functionName":"","ranges":[{"startOffset":2186,"endOffset":2567,"count":1},{"startOffset":2306,"endOffset":2360,"count":0},{"startOffset":2400,"endOffset":2454,"count":0},{"startOffset":2497,"endOffset":2563,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11802,"endOffset":11918,"count":2}],"isBlockCoverage":false}]},{"scriptId":"15","url":"node:internal/util","functions":[{"functionName":"","ranges":[{"startOffset":21789,"endOffset":21917,"count":1}],"isBlockCoverage":true}]},{"scriptId":"23","url":"node:events","functions":[{"functionName":"emit","ranges":[{"startOffset":13256,"endOffset":15559,"count":2}],"isBlockCoverage":false}]},{"scriptId":"24","url":"node:buffer","functions":[{"functionName":"alignPool","ranges":[{"startOffset":4244,"endOffset":4366,"count":3}],"isBlockCoverage":false},{"functionName":"from","ranges":[{"startOffset":8544,"endOffset":9509,"count":3}],"isBlockCoverage":false},{"functionName":"fromStringFast","ranges":[{"startOffset":13082,"endOffset":13628,"count":3}],"isBlockCoverage":false},{"functionName":"fromString","ranges":[{"startOffset":13630,"endOffset":14083,"count":3}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":17717,"endOffset":17781,"count":3}],"isBlockCoverage":false},{"functionName":"getEncodingOps","ranges":[{"startOffset":21109,"endOffset":22933,"count":3},{"startOffset":21259,"endOffset":21495,"count":0},{"startOffset":21500,"endOffset":21919,"count":0},{"startOffset":21924,"endOffset":22078,"count":0},{"startOffset":22083,"endOffset":22239,"count":0},{"startOffset":22244,"endOffset":22625,"count":0},{"startOffset":22630,"endOffset":22762,"count":0},{"startOffset":22767,"endOffset":22927,"count":0}],"isBlockCoverage":true}]},{"scriptId":"25","url":"node:internal/buffer","functions":[{"functionName":"FastBuffer","ranges":[{"startOffset":26365,"endOffset":26465,"count":3}],"isBlockCoverage":false}]},{"scriptId":"28","url":"node:internal/process/task_queues","functions":[{"functionName":"setHasTickScheduled","ranges":[{"startOffset":1059,"endOffset":1145,"count":2},{"startOffset":1135,"endOffset":1138,"count":1},{"startOffset":1139,"endOffset":1142,"count":1}],"isBlockCoverage":true},{"functionName":"processTicksAndRejections","ranges":[{"startOffset":1445,"endOffset":2424,"count":0},{"startOffset":1501,"endOffset":2304,"count":1},{"startOffset":1547,"endOffset":2279,"count":2},{"startOffset":1748,"endOffset":1781,"count":0},{"startOffset":1914,"endOffset":1956,"count":0},{"startOffset":1969,"endOffset":2020,"count":0},{"startOffset":2033,"endOffset":2093,"count":0},{"startOffset":2106,"endOffset":2133,"count":0},{"startOffset":2217,"endOffset":2238,"count":0},{"startOffset":2304,"endOffset":2358,"count":1}],"isBlockCoverage":true},{"functionName":"nextTick","ranges":[{"startOffset":2568,"endOffset":3442,"count":2},{"startOffset":2669,"endOffset":2676,"count":0},{"startOffset":2724,"endOffset":2738,"count":0},{"startOffset":2785,"endOffset":2836,"count":0},{"startOffset":2841,"endOffset":2906,"count":0},{"startOffset":2911,"endOffset":3054,"count":0},{"startOffset":3083,"endOffset":3109,"count":1},{"startOffset":3354,"endOffset":3414,"count":0}],"isBlockCoverage":true}]},{"scriptId":"29","url":"node:internal/process/promises","functions":[{"functionName":"setHasRejectionToWarn","ranges":[{"startOffset":2155,"endOffset":2245,"count":1},{"startOffset":2235,"endOffset":2238,"count":0}],"isBlockCoverage":true},{"functionName":"processPromiseRejections","ranges":[{"startOffset":6672,"endOffset":9849,"count":1},{"startOffset":6830,"endOffset":7009,"count":0},{"startOffset":7074,"endOffset":9753,"count":0}],"isBlockCoverage":true}]},{"scriptId":"30","url":"node:internal/fixed_queue","functions":[{"functionName":"isEmpty","ranges":[{"startOffset":3077,"endOffset":3129,"count":7}],"isBlockCoverage":true},{"functionName":"isFull","ranges":[{"startOffset":3133,"endOffset":3200,"count":2}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":3204,"endOffset":3291,"count":2}],"isBlockCoverage":true},{"functionName":"shift","ranges":[{"startOffset":3295,"endOffset":3510,"count":3},{"startOffset":3388,"endOffset":3400,"count":1},{"startOffset":3400,"endOffset":3509,"count":2}],"isBlockCoverage":true},{"functionName":"isEmpty","ranges":[{"startOffset":3630,"endOffset":3677,"count":4}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":3681,"endOffset":3945,"count":2},{"startOffset":3722,"endOffset":3915,"count":0}],"isBlockCoverage":true},{"functionName":"shift","ranges":[{"startOffset":3949,"endOffset":4204,"count":3},{"startOffset":4041,"endOffset":4062,"count":2},{"startOffset":4064,"endOffset":4183,"count":0}],"isBlockCoverage":true}]},{"scriptId":"37","url":"node:internal/source_map/source_map_cache","functions":[{"functionName":"","ranges":[{"startOffset":824,"endOffset":939,"count":1}],"isBlockCoverage":true},{"functionName":"sourceMapCacheToObject","ranges":[{"startOffset":8607,"endOffset":8855,"count":1},{"startOffset":8729,"endOffset":8750,"count":3},{"startOffset":8812,"endOffset":8839,"count":0}],"isBlockCoverage":true},{"functionName":"appendCJSCache","ranges":[{"startOffset":8857,"endOffset":9083,"count":1},{"startOffset":8934,"endOffset":9081,"count":0}],"isBlockCoverage":true}]},{"scriptId":"105","url":"file:///Users/salty/Documents/GitHub/Software_Eng_2_project_team25/node_modules/ava/lib/cli.js","functions":[{"functionName":"loadCli","ranges":[{"startOffset":2552,"endOffset":15159,"count":0},{"startOffset":14923,"endOffset":14956,"count":1},{"startOffset":15054,"endOffset":15157,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13693,"endOffset":14031,"count":0},{"startOffset":13895,"endOffset":13930,"count":1}],"isBlockCoverage":true}]},{"scriptId":"122","url":"node:internal/streams/writable","functions":[{"functionName":"nop","ranges":[{"startOffset":2389,"endOffset":2406,"count":4}],"isBlockCoverage":true},{"functionName":"resetBuffer","ranges":[{"startOffset":9005,"endOffset":9127,"count":1}],"isBlockCoverage":true},{"functionName":"_write","ranges":[{"startOffset":11408,"endOffset":12809,"count":6},{"startOffset":11533,"endOffset":11595,"count":0},{"startOffset":11661,"endOffset":11777,"count":0},{"startOffset":11855,"endOffset":11900,"count":0},{"startOffset":11982,"endOffset":12425,"count":3},{"startOffset":12191,"endOffset":12425,"count":0},{"startOffset":12479,"endOffset":12528,"count":0},{"startOffset":12572,"endOffset":12622,"count":0},{"startOffset":12635,"endOffset":12726,"count":0}],"isBlockCoverage":true},{"functionName":"Writable.write","ranges":[{"startOffset":12838,"endOffset":12924,"count":6}],"isBlockCoverage":true},{"functionName":"Writable.cork","ranges":[{"startOffset":12953,"endOffset":12999,"count":1}],"isBlockCoverage":true},{"functionName":"Writable.uncork","ranges":[{"startOffset":13030,"endOffset":13201,"count":1}],"isBlockCoverage":true},{"functionName":"writeOrBuffer","ranges":[{"startOffset":13759,"endOffset":14872,"count":6},{"startOffset":13874,"endOffset":13877,"count":0},{"startOffset":14096,"endOffset":14122,"count":0},{"startOffset":14177,"endOffset":14193,"count":3},{"startOffset":14194,"endOffset":14231,"count":3},{"startOffset":14233,"endOffset":14505,"count":3},{"startOffset":14359,"endOffset":14401,"count":0},{"startOffset":14462,"endOffset":14501,"count":0},{"startOffset":14505,"endOffset":14687,"count":3}],"isBlockCoverage":true},{"functionName":"doWrite","ranges":[{"startOffset":14874,"endOffset":15262,"count":1},{"startOffset":15067,"endOffset":15116,"count":0},{"startOffset":15177,"endOffset":15235,"count":0}],"isBlockCoverage":true},{"functionName":"onwrite","ranges":[{"startOffset":15651,"endOffset":17310,"count":4},{"startOffset":15826,"endOffset":15900,"count":0},{"startOffset":16021,"endOffset":16577,"count":0},{"startOffset":16638,"endOffset":16679,"count":1},{"startOffset":16994,"endOffset":17041,"count":2},{"startOffset":17043,"endOffset":17245,"count":2},{"startOffset":17251,"endOffset":17304,"count":0}],"isBlockCoverage":true},{"functionName":"afterWriteTick","ranges":[{"startOffset":17312,"endOffset":17451,"count":2}],"isBlockCoverage":true},{"functionName":"afterWrite","ranges":[{"startOffset":17453,"endOffset":17869,"count":2},{"startOffset":17575,"endOffset":17595,"count":0},{"startOffset":17596,"endOffset":17617,"count":0},{"startOffset":17636,"endOffset":17699,"count":0},{"startOffset":17723,"endOffset":17765,"count":4},{"startOffset":17807,"endOffset":17836,"count":0}],"isBlockCoverage":true},{"functionName":"clearBuffer","ranges":[{"startOffset":18598,"endOffset":20232,"count":2},{"startOffset":18719,"endOffset":18762,"count":1},{"startOffset":18764,"endOffset":18966,"count":1},{"startOffset":18966,"endOffset":18983,"count":0},{"startOffset":18983,"endOffset":19089,"count":1},{"startOffset":19091,"endOffset":19705,"count":1},{"startOffset":19195,"endOffset":19306,"count":0},{"startOffset":19511,"endOffset":19545,"count":0},{"startOffset":19705,"endOffset":20193,"count":0},{"startOffset":20193,"endOffset":20231,"count":1}],"isBlockCoverage":true},{"functionName":"callback","ranges":[{"startOffset":19197,"endOffset":19306,"count":0}],"isBlockCoverage":false},{"functionName":"needFinish","ranges":[{"startOffset":21956,"endOffset":22419,"count":2},{"startOffset":22315,"endOffset":22346,"count":0},{"startOffset":22347,"endOffset":22374,"count":0},{"startOffset":22375,"endOffset":22415,"count":0}],"isBlockCoverage":true},{"functionName":"finishMaybe","ranges":[{"startOffset":23735,"endOffset":24234,"count":2},{"startOffset":23804,"endOffset":24232,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":23939,"endOffset":24101,"count":0}],"isBlockCoverage":false}]},{"scriptId":"128","url":"node:net","functions":[{"functionName":"_unrefTimer","ranges":[{"startOffset":13851,"endOffset":13981,"count":1},{"startOffset":13953,"endOffset":13975,"count":0}],"isBlockCoverage":true},{"functionName":"Socket._writeGeneric","ranges":[{"startOffset":23949,"endOffset":24861,"count":1},{"startOffset":24171,"endOffset":24515,"count":0},{"startOffset":24596,"endOffset":24652,"count":0},{"startOffset":24742,"endOffset":24799,"count":0},{"startOffset":24821,"endOffset":24859,"count":0}],"isBlockCoverage":true},{"functionName":"connect","ranges":[{"startOffset":24266,"endOffset":24380,"count":0}],"isBlockCoverage":false},{"functionName":"onClose","ranges":[{"startOffset":24387,"endOffset":24466,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._writev","ranges":[{"startOffset":24892,"endOffset":24960,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":63557,"endOffset":63588,"count":1}],"isBlockCoverage":true}]},{"scriptId":"129","url":"node:internal/stream_base_commons","functions":[{"functionName":"createWriteWrap","ranges":[{"startOffset":2698,"endOffset":2936,"count":1}],"isBlockCoverage":true},{"functionName":"writevGeneric","ranges":[{"startOffset":2938,"endOffset":3577,"count":1},{"startOffset":3168,"endOffset":3192,"count":3},{"startOffset":3196,"endOffset":3405,"count":0}],"isBlockCoverage":true},{"functionName":"afterWriteDispatched","ranges":[{"startOffset":3786,"endOffset":4089,"count":1},{"startOffset":3953,"endOffset":4004,"count":0}],"isBlockCoverage":true}]},{"scriptId":"145","url":"file:///Users/salty/Documents/GitHub/Software_Eng_2_project_team25/node_modules/ava/lib/api.js","functions":[{"functionName":"","ranges":[{"startOffset":6233,"endOffset":6819,"count":1},{"startOffset":6269,"endOffset":6313,"count":0},{"startOffset":6315,"endOffset":6461,"count":0},{"startOffset":6480,"endOffset":6582,"count":0},{"startOffset":6584,"endOffset":6814,"count":0}],"isBlockCoverage":true}]},{"scriptId":"169","url":"file:///Users/salty/Documents/GitHub/Software_Eng_2_project_team25/node_modules/chalk/source/index.js","functions":[{"functionName":"get","ranges":[{"startOffset":3245,"endOffset":3289,"count":2}],"isBlockCoverage":true},{"functionName":"builder","ranges":[{"startOffset":3848,"endOffset":3959,"count":2},{"startOffset":3936,"endOffset":3958,"count":0}],"isBlockCoverage":true},{"functionName":"applyStyle","ranges":[{"startOffset":4265,"endOffset":5300,"count":2},{"startOffset":4318,"endOffset":4361,"count":0},{"startOffset":4419,"endOffset":4440,"count":0},{"startOffset":4511,"endOffset":4840,"count":0},{"startOffset":5177,"endOffset":5260,"count":0}],"isBlockCoverage":true}]},{"scriptId":"174","url":"file:///Users/salty/Documents/GitHub/Software_Eng_2_project_team25/node_modules/emittery/index.js","functions":[{"functionName":"emit","ranges":[{"startOffset":8504,"endOffset":9384,"count":0},{"startOffset":9381,"endOffset":9383,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9131,"endOffset":9229,"count":1}],"isBlockCoverage":true}]},{"scriptId":"190","url":"file:///Users/salty/Documents/GitHub/Software_Eng_2_project_team25/node_modules/ava/lib/run-status.js","functions":[{"functionName":"suggestExitCode","ranges":[{"startOffset":4619,"endOffset":5312,"count":1},{"startOffset":4681,"endOffset":4699,"count":0},{"startOffset":4730,"endOffset":4763,"count":0},{"startOffset":4765,"endOffset":4783,"count":0},{"startOffset":5154,"endOffset":5172,"count":0},{"startOffset":5278,"endOffset":5296,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5217,"endOffset":5275,"count":1},{"startOffset":5247,"endOffset":5275,"count":0}],"isBlockCoverage":true}]},{"scriptId":"265","url":"file:///Users/salty/Documents/GitHub/Software_Eng_2_project_team25/node_modules/indent-string/index.js","functions":[{"functionName":"indentString","ranges":[{"startOffset":15,"endOffset":819,"count":2},{"startOffset":173,"endOffset":274,"count":0},{"startOffset":308,"endOffset":408,"count":0},{"startOffset":426,"endOffset":518,"count":0},{"startOffset":553,"endOffset":663,"count":0},{"startOffset":683,"endOffset":704,"count":0},{"startOffset":739,"endOffset":746,"count":0}],"isBlockCoverage":true}]},{"scriptId":"617","url":"file:///Users/salty/Documents/GitHub/Software_Eng_2_project_team25/node_modules/ava/lib/reporters/default.js","functions":[{"functionName":"_write","ranges":[{"startOffset":865,"endOffset":936,"count":3}],"isBlockCoverage":true},{"functionName":"writeLine","ranges":[{"startOffset":939,"endOffset":1129,"count":3},{"startOffset":973,"endOffset":1060,"count":2},{"startOffset":1060,"endOffset":1126,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1290,"endOffset":1422,"count":1}],"isBlockCoverage":true},{"functionName":"endRun","ranges":[{"startOffset":17266,"endOffset":22925,"count":1},{"startOffset":17349,"endOffset":17435,"count":0},{"startOffset":17472,"endOffset":17590,"count":0},{"startOffset":17659,"endOffset":18251,"count":0},{"startOffset":18304,"endOffset":18972,"count":0},{"startOffset":18994,"endOffset":19027,"count":0},{"startOffset":19029,"endOffset":19193,"count":0},{"startOffset":19314,"endOffset":19635,"count":0},{"startOffset":19664,"endOffset":19747,"count":0},{"startOffset":19749,"endOffset":20521,"count":0},{"startOffset":20554,"endOffset":20876,"count":0},{"startOffset":20912,"endOffset":21082,"count":0},{"startOffset":21118,"endOffset":21288,"count":0},{"startOffset":21623,"endOffset":21774,"count":0},{"startOffset":21811,"endOffset":21938,"count":0},{"startOffset":21972,"endOffset":22090,"count":0},{"startOffset":22134,"endOffset":22283,"count":0},{"startOffset":22326,"endOffset":22472,"count":0},{"startOffset":22510,"endOffset":22665,"count":0},{"startOffset":22700,"endOffset":22862,"count":0},{"startOffset":22885,"endOffset":22922,"count":0}],"isBlockCoverage":true}]},{"scriptId":"619","url":"file:///Users/salty/Documents/GitHub/Software_Eng_2_project_team25/node_modules/plur/index.js","functions":[{"functionName":"plur","ranges":[{"startOffset":66,"endOffset":962,"count":1},{"startOffset":207,"endOffset":587,"count":0},{"startOffset":951,"endOffset":959,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":743,"endOffset":907,"count":1},{"startOffset":880,"endOffset":901,"count":0}],"isBlockCoverage":true}]},{"scriptId":"622","url":"file:///Users/salty/Documents/GitHub/Software_Eng_2_project_team25/node_modules/ava/lib/reporters/colors.js","functions":[{"functionName":"get log","ranges":[{"startOffset":54,"endOffset":89,"count":1}],"isBlockCoverage":true},{"functionName":"get pass","ranges":[{"startOffset":251,"endOffset":288,"count":1}],"isBlockCoverage":true}]},{"scriptId":"637","url":"node:internal/util/iterable_weak_map","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1959,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":373,"endOffset":1819,"count":1}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":521,"endOffset":1033,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1037,"endOffset":1093,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":1097,"endOffset":1146,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":1150,"endOffset":1388,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1392,"endOffset":1817,"count":1}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":1484,"endOffset":1736,"count":1},{"startOffset":1567,"endOffset":1735,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1758,"endOffset":1793,"count":0}],"isBlockCoverage":false},{"functionName":"cleanup","ranges":[{"startOffset":1821,"endOffset":1874,"count":0}],"isBlockCoverage":false}]}],"timestamp":48118.367834,"source-map-cache":{"file:///Users/salty/Documents/GitHub/Software_Eng_2_project_team25/node_modules/chunkd/dist/chunkd.js":{"lineLengths":[13,62,38,30,42,35,59,51,47,1,25,24,34],"data":{"version":3,"file":"chunkd.js","sourceRoot":"","sources":["file:///Users/salty/Documents/GitHub/Software_Eng_2_project_team25/node_modules/chunkd/src/chunkd.ts"],"names":[],"mappings":";;AAAA,SAAwB,MAAM,CAC7B,KAAU,EACV,KAAa,EACb,KAAa;IAEb,IAAI,MAAM,GAAG,KAAK,CAAC,MAAM,CAAA;IACzB,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,CAAA;IACrC,IAAI,SAAS,GAAG,MAAM,GAAG,KAAK,CAAA;IAC9B,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,SAAS,CAAC,GAAG,KAAK,GAAG,IAAI,CAAA;IACtD,IAAI,KAAK,GAAG,IAAI,GAAG,CAAC,KAAK,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;IAE9C,OAAO,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE,MAAM,GAAG,KAAK,CAAC,CAAA;AAC3C,CAAC;AAZD,yBAYC;AAED,MAAM,CAAC,OAAO,GAAG,MAAM,CAAA"},"url":null,"sourceURL":null},"file:///Users/salty/Documents/GitHub/Software_Eng_2_project_team25/node_modules/write-file-atomic/node_modules/signal-exit/dist/cjs/index.js":{"lineLengths":[13,7,62,74,65,63,53,60,45,115,43,34,51,41,47,46,41,38,37,55,26,64,27,15,15,25,20,6,17,22,17,6,14,23,19,35,40,9,52,24,28,30,32,11,5,16,36,5,28,40,35,29,23,19,9,28,43,28,9,14,30,9,5,28,31,25,9,32,24,46,51,9,28,62,9,19,5,1,22,1,37,12,26,44,10,16,34,10,18,36,10,6,2,49,14,25,5,14,16,1,41,52,40,25,65,24,29,13,25,31,23,20,26,16,32,43,32,49,45,70,71,69,35,63,46,83,84,82,82,81,27,37,34,68,74,61,17,36,49,34,70,41,68,29,53,40,17,14,9,61,49,5,22,29,40,29,9,28,37,24,9,59,33,22,49,63,68,30,13,10,5,12,27,19,9,28,65,68,68,35,33,49,17,51,23,46,13,25,9,44,47,10,46,49,10,5,14,28,19,9,29,45,53,33,28,75,13,32,17,60,37,13,25,32,11,55,67,33,5,30,29,40,21,9,43,28,65,91,5,31,45,56,46,49,37,13,33,60,33,69,32,23,9,14,55,9,5,1,35,65,25,94,3,67,39,2,68,29,2,61,3,28,3,66,66,45,2,12,3,24,3,68,66,45,2,12,3,27,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Users/salty/Documents/GitHub/Software_Eng_2_project_team25/node_modules/write-file-atomic/node_modules/signal-exit/src/index.ts"],"names":[],"mappings":"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","sourcesContent":["// Note: since nyc uses this module to output coverage, any lines\n// that are in the direct sync flow of nyc's outputCoverage are\n// ignored, since we can never get coverage for them.\n// grab a reference to node's real process object right away\nimport { signals } from './signals.js'\nexport { signals }\n\n// just a loosened process type so we can do some evil things\ntype ProcessRE = NodeJS.Process & {\n  reallyExit: (code?: number | undefined | null) => any\n  emit: (ev: string, ...a: any[]) => any\n}\n\nconst processOk = (process: any): process is ProcessRE =>\n  !!process &&\n  typeof process === 'object' &&\n  typeof process.removeListener === 'function' &&\n  typeof process.emit === 'function' &&\n  typeof process.reallyExit === 'function' &&\n  typeof process.listeners === 'function' &&\n  typeof process.kill === 'function' &&\n  typeof process.pid === 'number' &&\n  typeof process.on === 'function'\n\nconst kExitEmitter = Symbol.for('signal-exit emitter')\nconst global: typeof globalThis & { [kExitEmitter]?: Emitter } = globalThis\nconst ObjectDefineProperty = Object.defineProperty.bind(Object)\n\n/**\n * A function that takes an exit code and signal as arguments\n *\n * In the case of signal exits *only*, a return value of true\n * will indicate that the signal is being handled, and we should\n * not synthetically exit with the signal we received. Regardless\n * of the handler return value, the handler is unloaded when an\n * otherwise fatal signal is received, so you get exactly 1 shot\n * at it, unless you add another onExit handler at that point.\n *\n * In the case of numeric code exits, we may already have committed\n * to exiting the process, for example via a fatal exception or\n * unhandled promise rejection, so it is impossible to stop safely.\n */\nexport type Handler = (\n  code: number | null | undefined,\n  signal: NodeJS.Signals | null\n) => true | void\ntype ExitEvent = 'afterExit' | 'exit'\ntype Emitted = { [k in ExitEvent]: boolean }\ntype Listeners = { [k in ExitEvent]: Handler[] }\n\n// teeny special purpose ee\nclass Emitter {\n  emitted: Emitted = {\n    afterExit: false,\n    exit: false,\n  }\n\n  listeners: Listeners = {\n    afterExit: [],\n    exit: [],\n  }\n\n  count: number = 0\n  id: number = Math.random()\n\n  constructor() {\n    if (global[kExitEmitter]) {\n      return global[kExitEmitter]\n    }\n    ObjectDefineProperty(global, kExitEmitter, {\n      value: this,\n      writable: false,\n      enumerable: false,\n      configurable: false,\n    })\n  }\n\n  on(ev: ExitEvent, fn: Handler) {\n    this.listeners[ev].push(fn)\n  }\n\n  removeListener(ev: ExitEvent, fn: Handler) {\n    const list = this.listeners[ev]\n    const i = list.indexOf(fn)\n    /* c8 ignore start */\n    if (i === -1) {\n      return\n    }\n    /* c8 ignore stop */\n    if (i === 0 && list.length === 1) {\n      list.length = 0\n    } else {\n      list.splice(i, 1)\n    }\n  }\n\n  emit(\n    ev: ExitEvent,\n    code: number | null | undefined,\n    signal: NodeJS.Signals | null\n  ): boolean {\n    if (this.emitted[ev]) {\n      return false\n    }\n    this.emitted[ev] = true\n    let ret: boolean = false\n    for (const fn of this.listeners[ev]) {\n      ret = fn(code, signal) === true || ret\n    }\n    if (ev === 'exit') {\n      ret = this.emit('afterExit', code, signal) || ret\n    }\n    return ret\n  }\n}\n\nabstract class SignalExitBase {\n  abstract onExit(cb: Handler, opts?: { alwaysLast?: boolean }): () => void\n  abstract load(): void\n  abstract unload(): void\n}\n\nconst signalExitWrap = <T extends SignalExitBase>(handler: T) => {\n  return {\n    onExit(cb: Handler, opts?: { alwaysLast?: boolean }) {\n      return handler.onExit(cb, opts)\n    },\n    load() {\n      return handler.load()\n    },\n    unload() {\n      return handler.unload()\n    },\n  }\n}\n\nclass SignalExitFallback extends SignalExitBase {\n  onExit() {\n    return () => {}\n  }\n  load() {}\n  unload() {}\n}\n\nclass SignalExit extends SignalExitBase {\n  // \"SIGHUP\" throws an `ENOSYS` error on Windows,\n  // so use a supported signal instead\n  /* c8 ignore start */\n  #hupSig = process.platform === 'win32' ? 'SIGINT' : 'SIGHUP'\n  /* c8 ignore stop */\n  #emitter = new Emitter()\n  #process: ProcessRE\n  #originalProcessEmit: ProcessRE['emit']\n  #originalProcessReallyExit: ProcessRE['reallyExit']\n\n  #sigListeners: { [k in NodeJS.Signals]?: () => void } = {}\n  #loaded: boolean = false\n\n  constructor(process: ProcessRE) {\n    super()\n    this.#process = process\n    // { <signal>: <listener fn>, ... }\n    this.#sigListeners = {}\n    for (const sig of signals) {\n      this.#sigListeners[sig] = () => {\n        // If there are no other listeners, an exit is coming!\n        // Simplest way: remove us and then re-send the signal.\n        // We know that this will kill the process, so we can\n        // safely emit now.\n        const listeners = this.#process.listeners(sig)\n        let { count } = this.#emitter\n        // This is a workaround for the fact that signal-exit v3 and signal\n        // exit v4 are not aware of each other, and each will attempt to let\n        // the other handle it, so neither of them do. To correct this, we\n        // detect if we're the only handler *except* for previous versions\n        // of signal-exit, and increment by the count of listeners it has\n        // created.\n        /* c8 ignore start */\n        const p = process as unknown as {\n          __signal_exit_emitter__?: { count: number }\n        }\n        if (\n          typeof p.__signal_exit_emitter__ === 'object' &&\n          typeof p.__signal_exit_emitter__.count === 'number'\n        ) {\n          count += p.__signal_exit_emitter__.count\n        }\n        /* c8 ignore stop */\n        if (listeners.length === count) {\n          this.unload()\n          const ret = this.#emitter.emit('exit', null, sig)\n          /* c8 ignore start */\n          const s = sig === 'SIGHUP' ? this.#hupSig : sig\n          if (!ret) process.kill(process.pid, s)\n          /* c8 ignore stop */\n        }\n      }\n    }\n\n    this.#originalProcessReallyExit = process.reallyExit\n    this.#originalProcessEmit = process.emit\n  }\n\n  onExit(cb: Handler, opts?: { alwaysLast?: boolean }) {\n    /* c8 ignore start */\n    if (!processOk(this.#process)) {\n      return () => {}\n    }\n    /* c8 ignore stop */\n\n    if (this.#loaded === false) {\n      this.load()\n    }\n\n    const ev = opts?.alwaysLast ? 'afterExit' : 'exit'\n    this.#emitter.on(ev, cb)\n    return () => {\n      this.#emitter.removeListener(ev, cb)\n      if (\n        this.#emitter.listeners['exit'].length === 0 &&\n        this.#emitter.listeners['afterExit'].length === 0\n      ) {\n        this.unload()\n      }\n    }\n  }\n\n  load() {\n    if (this.#loaded) {\n      return\n    }\n    this.#loaded = true\n\n    // This is the number of onSignalExit's that are in play.\n    // It's important so that we can count the correct number of\n    // listeners on signals, and don't wait for the other one to\n    // handle it instead of us.\n    this.#emitter.count += 1\n\n    for (const sig of signals) {\n      try {\n        const fn = this.#sigListeners[sig]\n        if (fn) this.#process.on(sig, fn)\n      } catch (_) {}\n    }\n\n    this.#process.emit = (ev: string, ...a: any[]) => {\n      return this.#processEmit(ev, ...a)\n    }\n    this.#process.reallyExit = (code?: number | null | undefined) => {\n      return this.#processReallyExit(code)\n    }\n  }\n\n  unload() {\n    if (!this.#loaded) {\n      return\n    }\n    this.#loaded = false\n\n    signals.forEach(sig => {\n      const listener = this.#sigListeners[sig]\n      /* c8 ignore start */\n      if (!listener) {\n        throw new Error('Listener not defined for signal: ' + sig)\n      }\n      /* c8 ignore stop */\n      try {\n        this.#process.removeListener(sig, listener)\n        /* c8 ignore start */\n      } catch (_) {}\n      /* c8 ignore stop */\n    })\n    this.#process.emit = this.#originalProcessEmit\n    this.#process.reallyExit = this.#originalProcessReallyExit\n    this.#emitter.count -= 1\n  }\n\n  #processReallyExit(code?: number | null | undefined) {\n    /* c8 ignore start */\n    if (!processOk(this.#process)) {\n      return 0\n    }\n    this.#process.exitCode = code || 0\n    /* c8 ignore stop */\n\n    this.#emitter.emit('exit', this.#process.exitCode, null)\n    return this.#originalProcessReallyExit.call(\n      this.#process,\n      this.#process.exitCode\n    )\n  }\n\n  #processEmit(ev: string, ...args: any[]): any {\n    const og = this.#originalProcessEmit\n    if (ev === 'exit' && processOk(this.#process)) {\n      if (typeof args[0] === 'number') {\n        this.#process.exitCode = args[0]\n        /* c8 ignore start */\n      }\n      /* c8 ignore start */\n      const ret = og.call(this.#process, ev, ...args)\n      /* c8 ignore start */\n      this.#emitter.emit('exit', this.#process.exitCode, null)\n      /* c8 ignore stop */\n      return ret\n    } else {\n      return og.call(this.#process, ev, ...args)\n    }\n  }\n}\n\nconst process = globalThis.process\n// wrap so that we call the method on the actual handler, without\n// exporting it directly.\nexport const {\n  /**\n   * Called when the process is exiting, whether via signal, explicit\n   * exit, or running out of stuff to do.\n   *\n   * If the global process object is not suitable for instrumentation,\n   * then this will be a no-op.\n   *\n   * Returns a function that may be used to unload signal-exit.\n   */\n  onExit,\n\n  /**\n   * Load the listeners.  Likely you never need to call this, unless\n   * doing a rather deep integration with signal-exit functionality.\n   * Mostly exposed for the benefit of testing.\n   *\n   * @internal\n   */\n  load,\n\n  /**\n   * Unload the listeners.  Likely you never need to call this, unless\n   * doing a rather deep integration with signal-exit functionality.\n   * Mostly exposed for the benefit of testing.\n   *\n   * @internal\n   */\n  unload,\n} = signalExitWrap(\n  processOk(process) ? new SignalExit(process) : new SignalExitFallback()\n)\n"]},"url":null,"sourceURL":null},"file:///Users/salty/Documents/GitHub/Software_Eng_2_project_team25/node_modules/write-file-atomic/node_modules/signal-exit/dist/cjs/signals.js":{"lineLengths":[13,62,25,3,47,2,54,54,53,55,28,2,55,54,52,2,54,49,2,56,52,55,36,2,54,50,54,13,3,21,52,35,133,61,14,16,6,1,35,68,1,35],"data":{"version":3,"file":"signals.js","sourceRoot":"","sources":["file:///Users/salty/Documents/GitHub/Software_Eng_2_project_team25/node_modules/write-file-atomic/node_modules/signal-exit/src/signals.ts"],"names":[],"mappings":";;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;GAyBG;AACU,QAAA,OAAO,GAAqB,EAAE,CAAA;AAC3C,eAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAA;AAE3C,IAAI,OAAO,CAAC,QAAQ,KAAK,OAAO,EAAE;IAChC,eAAO,CAAC,IAAI,CACV,SAAS,EACT,SAAS,EACT,WAAW,EACX,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,QAAQ,EACR,SAAS,EACT,QAAQ;IACR,yDAAyD;IACzD,UAAU;IACV,YAAY;KACb,CAAA;CACF;AAED,IAAI,OAAO,CAAC,QAAQ,KAAK,OAAO,EAAE;IAChC,eAAO,CAAC,IAAI,CAAC,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,WAAW,CAAC,CAAA;CACxD","sourcesContent":["/**\n * This is not the set of all possible signals.\n *\n * It IS, however, the set of all signals that trigger\n * an exit on either Linux or BSD systems.  Linux is a\n * superset of the signal names supported on BSD, and\n * the unknown signals just fail to register, so we can\n * catch that easily enough.\n *\n * Windows signals are a different set, since there are\n * signals that terminate Windows processes, but don't\n * terminate (or don't even exist) on Posix systems.\n *\n * Don't bother with SIGKILL.  It's uncatchable, which\n * means that we can't fire any callbacks anyway.\n *\n * If a user does happen to register a handler on a non-\n * fatal signal like SIGWINCH or something, and then\n * exit, it'll end up firing `process.emit('exit')`, so\n * the handler will be fired anyway.\n *\n * SIGBUS, SIGFPE, SIGSEGV and SIGILL, when not raised\n * artificially, inherently leave the process in a\n * state from which it is not safe to try and enter JS\n * listeners.\n */\nexport const signals: NodeJS.Signals[] = []\nsignals.push('SIGHUP', 'SIGINT', 'SIGTERM')\n\nif (process.platform !== 'win32') {\n  signals.push(\n    'SIGALRM',\n    'SIGABRT',\n    'SIGVTALRM',\n    'SIGXCPU',\n    'SIGXFSZ',\n    'SIGUSR2',\n    'SIGTRAP',\n    'SIGSYS',\n    'SIGQUIT',\n    'SIGIOT'\n    // should detect profiler and enable/disable accordingly.\n    // see #21\n    // 'SIGPROF'\n  )\n}\n\nif (process.platform === 'linux') {\n  signals.push('SIGIO', 'SIGPOLL', 'SIGPWR', 'SIGSTKFLT')\n}\n"]},"url":null,"sourceURL":null}}}